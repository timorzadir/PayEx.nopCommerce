//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SD.Payex2.Services.PxAgreement {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://external.payex.com/PxAgreement/", ConfigurationName="Services.PxAgreement.PxAgreementSoap")]
    internal interface PxAgreementSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxAgreement/AutoPay", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AutoPay(long accountNumber, string agreementRef, int price, string productNumber, string description, string orderId, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxAgreement/AutoPay2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AutoPay2(long accountNumber, string agreementRef, int price, string productNumber, string description, string orderId, string purchaseOperation, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxAgreement/AutoPay3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AutoPay3(long accountNumber, string agreementRef, int price, string productNumber, string description, string orderId, string purchaseOperation, string currency, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxAgreement/CreateAgreement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateAgreement(long accountNumber, int clientType, string clientRef, string merchantRef, string description, long paymentMethod, int maxAmount, string notifyUrl, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxAgreement/CreateAgreement2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateAgreement2(long accountNumber, int clientType, string clientRef, string merchantRef, string description, long paymentMethod, int maxAmount, string notifyUrl, string startDate, string stopDate, int maxLimitPeriod, int maxPeriod, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxAgreement/CreateAgreement3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateAgreement3(long accountNumber, string merchantRef, string description, string purchaseOperation, int maxAmount, string notifyUrl, string startDate, string stopDate, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxAgreement/DeleteAgreement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeleteAgreement(long accountNumber, string agreementRef, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxAgreement/ActivatePxAgreement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ActivatePxAgreement(long accountNumber, int clientType, string clientRef, string password, string agreementRef, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxAgreement/Check", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Check(long accountNumber, string agreementRef, string hash);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface PxAgreementSoapChannel : SD.Payex2.Services.PxAgreement.PxAgreementSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class PxAgreementSoapClient : System.ServiceModel.ClientBase<SD.Payex2.Services.PxAgreement.PxAgreementSoap>, SD.Payex2.Services.PxAgreement.PxAgreementSoap {
        
        public PxAgreementSoapClient() {
        }
        
        public PxAgreementSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PxAgreementSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PxAgreementSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PxAgreementSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AutoPay(long accountNumber, string agreementRef, int price, string productNumber, string description, string orderId, string hash) {
            return base.Channel.AutoPay(accountNumber, agreementRef, price, productNumber, description, orderId, hash);
        }
        
        public string AutoPay2(long accountNumber, string agreementRef, int price, string productNumber, string description, string orderId, string purchaseOperation, string hash) {
            return base.Channel.AutoPay2(accountNumber, agreementRef, price, productNumber, description, orderId, purchaseOperation, hash);
        }
        
        public string AutoPay3(long accountNumber, string agreementRef, int price, string productNumber, string description, string orderId, string purchaseOperation, string currency, string hash) {
            return base.Channel.AutoPay3(accountNumber, agreementRef, price, productNumber, description, orderId, purchaseOperation, currency, hash);
        }
        
        public string CreateAgreement(long accountNumber, int clientType, string clientRef, string merchantRef, string description, long paymentMethod, int maxAmount, string notifyUrl, string hash) {
            return base.Channel.CreateAgreement(accountNumber, clientType, clientRef, merchantRef, description, paymentMethod, maxAmount, notifyUrl, hash);
        }
        
        public string CreateAgreement2(long accountNumber, int clientType, string clientRef, string merchantRef, string description, long paymentMethod, int maxAmount, string notifyUrl, string startDate, string stopDate, int maxLimitPeriod, int maxPeriod, string hash) {
            return base.Channel.CreateAgreement2(accountNumber, clientType, clientRef, merchantRef, description, paymentMethod, maxAmount, notifyUrl, startDate, stopDate, maxLimitPeriod, maxPeriod, hash);
        }
        
        public string CreateAgreement3(long accountNumber, string merchantRef, string description, string purchaseOperation, int maxAmount, string notifyUrl, string startDate, string stopDate, string hash) {
            return base.Channel.CreateAgreement3(accountNumber, merchantRef, description, purchaseOperation, maxAmount, notifyUrl, startDate, stopDate, hash);
        }
        
        public string DeleteAgreement(long accountNumber, string agreementRef, string hash) {
            return base.Channel.DeleteAgreement(accountNumber, agreementRef, hash);
        }
        
        public string ActivatePxAgreement(long accountNumber, int clientType, string clientRef, string password, string agreementRef, string hash) {
            return base.Channel.ActivatePxAgreement(accountNumber, clientType, clientRef, password, agreementRef, hash);
        }
        
        public string Check(long accountNumber, string agreementRef, string hash) {
            return base.Channel.Check(accountNumber, agreementRef, hash);
        }
    }
}
