//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SD.Payex2.Services.PxOrder {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://external.payex.com/PxOrder/", ConfigurationName="Services.PxOrder.PxOrderSoap")]
    internal interface PxOrderSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Initialize8", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Initialize8(
                    long accountNumber, 
                    string purchaseOperation, 
                    long price, 
                    string priceArgList, 
                    string currency, 
                    int vat, 
                    string orderID, 
                    string productNumber, 
                    string description, 
                    string clientIPAddress, 
                    string clientIdentifier, 
                    string additionalValues, 
                    string externalID, 
                    string returnUrl, 
                    string view, 
                    string agreementRef, 
                    string cancelUrl, 
                    string clientLanguage, 
                    string hash);
        
        // CODEGEN: Generating message contract since the wrapper name (Initialize2) of message Initialize2 does not match the default value (Initialize)
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Initialize2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SD.Payex2.Services.PxOrder.Initialize21 Initialize(SD.Payex2.Services.PxOrder.Initialize2 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Initialize3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Initialize3(
                    long accountNumber, 
                    string purchaseOperation, 
                    string orderType, 
                    int period, 
                    int price, 
                    string priceArgList, 
                    int vat, 
                    string orderID, 
                    string productNumber, 
                    string description, 
                    string clientIPAddress, 
                    string externalID, 
                    string returnUrl, 
                    string view, 
                    int viewType, 
                    string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Initialize4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Initialize4(
                    long accountNumber, 
                    string purchaseOperation, 
                    int price, 
                    string priceArgList, 
                    string currency, 
                    int vat, 
                    string orderID, 
                    string productNumber, 
                    string description, 
                    string clientIPAddress, 
                    string externalID, 
                    string returnUrl, 
                    string view, 
                    int viewType, 
                    string agreementRef, 
                    string cancelUrl, 
                    string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Initialize5", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Initialize5(
                    long accountNumber, 
                    string purchaseOperation, 
                    int price, 
                    string priceArgList, 
                    string currency, 
                    int vat, 
                    string orderID, 
                    string productNumber, 
                    string description, 
                    string clientIPAddress, 
                    string clientIdentifier, 
                    string externalID, 
                    string returnUrl, 
                    string view, 
                    int viewType, 
                    string agreementRef, 
                    string cancelUrl, 
                    string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Initialize6", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Initialize6(
                    long accountNumber, 
                    string purchaseOperation, 
                    int price, 
                    string priceArgList, 
                    string currency, 
                    int vat, 
                    string orderID, 
                    string productNumber, 
                    string description, 
                    string clientIPAddress, 
                    string clientIdentifier, 
                    string externalID, 
                    string returnUrl, 
                    string view, 
                    int viewType, 
                    string agreementRef, 
                    string cancelUrl, 
                    string clientLanguage, 
                    string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Initialize7", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Initialize7(
                    long accountNumber, 
                    string purchaseOperation, 
                    int price, 
                    string priceArgList, 
                    string currency, 
                    int vat, 
                    string orderID, 
                    string productNumber, 
                    string description, 
                    string clientIPAddress, 
                    string clientIdentifier, 
                    string additionalValues, 
                    string externalID, 
                    string returnUrl, 
                    string view, 
                    string agreementRef, 
                    string cancelUrl, 
                    string clientLanguage, 
                    string hash);
        
        // CODEGEN: Generating message contract since the wrapper name (Initialize) of message InitializeRequest does not match the default value (Initialize1)
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Initialize", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SD.Payex2.Services.PxOrder.InitializeResponse Initialize1(SD.Payex2.Services.PxOrder.InitializeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/InitializeBasic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InitializeBasic(long accountNumber, string purchaseOperation, string orderID, string productNumber, string priceArgList, string description, string returnURL, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Complete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Complete(long accountNumber, string orderRef, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Check2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Check2(long accountNumber, int transactionNumber, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Check", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Check(long accountNumber, string transactionRef, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/SalePX", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SalePX(long accountNumber, string orderRef, int userType, string userRef, string password, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/AuthorizePX", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AuthorizePX(long accountNumber, string orderRef, int userType, string userRef, string password, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/PurchasePX", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PurchasePX(long accountNumber, string orderRef, int userType, string userRef, string password, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/PurchaseActivate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PurchaseActivate(long accountNumber, int transactionNumber, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/PurchaseOTT", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PurchaseOTT(long accountNumber, string orderRef, int identifierType, string identifierRef, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/SaleCPA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaleCPA(long accountNumber, string orderRef, int userType, string userRef, string password, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/ReserveIVR", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ReserveIVR(long accountNumber, string orderRef, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/SaleIVR", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaleIVR(long accountNumber, string orderRef, int userType, string userRef, string ivrCode, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Cancel2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Cancel2(long accountNumber, int transactionNumber, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Cancel", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Cancel(long accountNumber, string transactionRef, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Credit2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Credit2(long accountNumber, int transactionNumber, int amount, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Credit3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Credit3(long accountNumber, int transactionNumber, int amount, string orderId, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Credit4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Credit4(long accountNumber, int transactionNumber, int amount, string orderId, int vatAmount, string additionalValues, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Credit5", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Credit5(long accountNumber, int transactionNumber, long amount, string orderId, int vatAmount, string additionalValues, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Credit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Credit(long accountNumber, string transactionRef, int amount, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/CreditOrderLine2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreditOrderLine2(long accountNumber, int transactionNumber, string itemNumber, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/CreditOrderLine3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreditOrderLine3(long accountNumber, int transactionNumber, string itemNumber, string orderId, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/CreditOrderLine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreditOrderLine(long accountNumber, string transactionRef, string itemNumber, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Capture", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Capture(long accountNumber, string transactionRef, int amount, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Capture2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Capture2(long accountNumber, int transactionNumber, int amount, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Capture3", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Capture3(long accountNumber, int transactionNumber, int amount, string orderId, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Capture4", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Capture4(long accountNumber, int transactionNumber, int amount, string orderId, int vatAmount, string additionalValues, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/Capture5", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Capture5(long accountNumber, int transactionNumber, long amount, string orderId, int vatAmount, string additionalValues, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/SaleEVC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaleEVC(long accountNumber, string orderRef, int userType, string userRef, string valueCode, string clientIPAddress, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/AuthorizeEVC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AuthorizeEVC(long accountNumber, string orderRef, int userType, string userRef, string valueCode, string clientIPAddress, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/AddSingleOrderLine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddSingleOrderLine(long accountNumber, string orderRef, string itemNumber, string itemDescription1, string itemDescription2, string itemDescription3, string itemDescription4, string itemDescription5, int quantity, int amount, int vatPrice, int vatPercent, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/AddSingleOrderLine2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddSingleOrderLine2(long accountNumber, string orderRef, string itemNumber, string itemDescription1, string itemDescription2, string itemDescription3, string itemDescription4, string itemDescription5, int quantity, long amount, int vatPrice, int vatPercent, string hash);
        
        // CODEGEN: Parameter 'orderDetails' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlArrayItemAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/AddMultipleOrderLines", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SD.Payex2.Services.PxOrder.AddMultipleOrderLinesResponse AddMultipleOrderLines(SD.Payex2.Services.PxOrder.AddMultipleOrderLinesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/PrepareSaleDD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PrepareSaleDD(long accountNumber, string orderRef, int userType, string userRef, string bankName, string clientIPAddress, string clientIdentifier, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/PrepareSaleDD2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PrepareSaleDD2(long accountNumber, string orderRef, int userType, string userRef, string bankName, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/PrepareAuthorizeDD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PrepareAuthorizeDD(long accountNumber, string orderRef, int userType, string userRef, string bankName, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/SaleInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaleInvoice(
                    long accountNumber, 
                    string orderRef, 
                    int userType, 
                    string userRef, 
                    string invoiceText, 
                    int mediaDistribution, 
                    string customerId, 
                    string customerName, 
                    string customerPostNumber, 
                    string customerCity, 
                    string customerCountry, 
                    string customerSosialSecurityNumber, 
                    string customerPhoneNumber, 
                    string customerEmailAddress, 
                    string customerCOAddress, 
                    string customerStreetAddress, 
                    string productCode, 
                    string dueDateExceeded, 
                    string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/SaleInvoice2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaleInvoice2(
                    long accountNumber, 
                    string orderRef, 
                    int userType, 
                    string userRef, 
                    string invoiceText, 
                    int mediaDistribution, 
                    string customerId, 
                    string customerName, 
                    string customerPostNumber, 
                    string customerCity, 
                    string customerCountry, 
                    string customerSosialSecurityNumber, 
                    string customerPhoneNumber, 
                    string customerEmailAddress, 
                    string customerCOAddress, 
                    string customerStreetAddress, 
                    string productCode, 
                    string dueDateExceeded, 
                    string creditcheckRef, 
                    string invoiceLayout, 
                    string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/SaleInvoiceLedger", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaleInvoiceLedger(
                    long accountNumber, 
                    string orderRef, 
                    int userType, 
                    string userRef, 
                    string invoiceText, 
                    int mediaDistribution, 
                    string customerId, 
                    string customerName, 
                    string customerPostNumber, 
                    string customerCity, 
                    string customerCountry, 
                    string customerSosialSecurityNumber, 
                    string customerPhoneNumber, 
                    string customerEmailAddress, 
                    string customerCOAddress, 
                    string customerStreetAddress, 
                    string productCode, 
                    string dueDate, 
                    string creditcheckRef, 
                    int invoiceNumber, 
                    string invoiceDate, 
                    string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/AddLoan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddLoan(
                    long accountNumber, 
                    string orderRef, 
                    string socialSecurityNumber, 
                    string email, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string postalCode, 
                    string city, 
                    string country, 
                    string phone1, 
                    string phone2, 
                    string gsm, 
                    string additionalProducs, 
                    string shippingDescription, 
                    string additionalInfo, 
                    int calculateType, 
                    string calculateRef, 
                    int nominalInterest, 
                    int pkiMethod, 
                    int model, 
                    string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/CalculateLoan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CalculateLoan(long accountNumber, int numberOfMonths, int monthlyPayment, long amount, int loanType, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/SaleLoan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaleLoan(long accountNumber, string orderRef, int userType, string userRef, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/AuthorizeLoan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AuthorizeLoan(long accountNumber, string orderRef, int userType, string userRef, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/AddOrderAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddOrderAddress(
                    long accountNumber, 
                    string orderRef, 
                    string billingFirstName, 
                    string billingLastName, 
                    string billingAddress1, 
                    string billingAddress2, 
                    string billingAddress3, 
                    string billingPostNumber, 
                    string billingCity, 
                    string billingState, 
                    string billingCountry, 
                    string billingEmail, 
                    string billingPhone, 
                    string billingGsm, 
                    string deliveryFirstName, 
                    string deliveryLastName, 
                    string deliveryAddress1, 
                    string deliveryAddress2, 
                    string deliveryAddress3, 
                    string deliveryPostNumber, 
                    string deliveryCity, 
                    string deliveryState, 
                    string deliveryCountry, 
                    string deliveryEmail, 
                    string deliveryPhone, 
                    string deliveryGsm, 
                    string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/AddOrderAddress2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddOrderAddress2(
                    long accountNumber, 
                    string orderRef, 
                    string billingFirstName, 
                    string billingLastName, 
                    string billingAddress1, 
                    string billingAddress2, 
                    string billingAddress3, 
                    string billingPostNumber, 
                    string billingCity, 
                    string billingState, 
                    string billingCountry, 
                    string billingCountryCode, 
                    string billingEmail, 
                    string billingPhone, 
                    string billingGsm, 
                    string deliveryFirstName, 
                    string deliveryLastName, 
                    string deliveryAddress1, 
                    string deliveryAddress2, 
                    string deliveryAddress3, 
                    string deliveryPostNumber, 
                    string deliveryCity, 
                    string deliveryState, 
                    string deliveryCountry, 
                    string deliveryCountryCode, 
                    string deliveryEmail, 
                    string deliveryPhone, 
                    string deliveryGsm, 
                    string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/AuthorizeGC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AuthorizeGC(long accountNumber, string orderRef, int userType, string userRef, string pan, string expireMonth, string expireYear, string cvc, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/SaleGC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaleGC(long accountNumber, string orderRef, int userType, string userRef, string pan, string expireMonth, string expireYear, string cvc, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/GetTransactionDetails2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTransactionDetails2(long accountNumber, int transactionNumber, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/GetTransactionDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTransactionDetails(long accountNumber, string transactionRef, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/TransactionCheck2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TransactionCheck2(long accountNumber, int transactionNumber, string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/AuthorizeInvoice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AuthorizeInvoice(
                    long accountNumber, 
                    string orderRef, 
                    int userType, 
                    string userRef, 
                    string invoiceText, 
                    int mediaDistribution, 
                    string customerId, 
                    string customerName, 
                    string customerPostNumber, 
                    string customerCity, 
                    string customerCountry, 
                    string customerSosialSecurityNumber, 
                    string customerPhoneNumber, 
                    string customerEmailAddress, 
                    string customerCOAddress, 
                    string customerStreetAddress, 
                    string productCode, 
                    string dueDateExceeded, 
                    string creditcheckRef, 
                    string invoiceLayout, 
                    string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/AuthorizeInvoiceLedger", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AuthorizeInvoiceLedger(
                    long accountNumber, 
                    string orderRef, 
                    int userType, 
                    string userRef, 
                    string invoiceText, 
                    int mediaDistribution, 
                    string customerId, 
                    string customerName, 
                    string customerPostNumber, 
                    string customerCity, 
                    string customerCountry, 
                    string customerSosialSecurityNumber, 
                    string customerPhoneNumber, 
                    string customerEmailAddress, 
                    string customerCOAddress, 
                    string customerStreetAddress, 
                    string productCode, 
                    string dueDate, 
                    string creditcheckRef, 
                    int invoiceNumber, 
                    string invoiceDate, 
                    string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/PurchaseInvoicePrivate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PurchaseInvoicePrivate(
                    long accountNumber, 
                    string orderRef, 
                    string customerRef, 
                    string customerName, 
                    string streetAddress, 
                    string coAddress, 
                    string postalCode, 
                    string city, 
                    string country, 
                    string socialSecurityNumber, 
                    string phoneNumber, 
                    string email, 
                    string productCode, 
                    string creditcheckRef, 
                    int mediaDistribution, 
                    string invoiceText, 
                    string invoiceDate, 
                    short invoiceDueDays, 
                    int invoiceNumber, 
                    string invoiceLayout, 
                    string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/PurchaseInvoiceCorporate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PurchaseInvoiceCorporate(
                    long accountNumber, 
                    string orderRef, 
                    string companyRef, 
                    string companyName, 
                    string streetAddress, 
                    string coAddress, 
                    string postalCode, 
                    string city, 
                    string country, 
                    string organizationNumber, 
                    string phoneNumber, 
                    string email, 
                    string productCode, 
                    string creditcheckRef, 
                    int mediaDistribution, 
                    string invoiceText, 
                    string invoiceDate, 
                    short invoiceDueDays, 
                    int invoiceNumber, 
                    string invoiceLayout, 
                    string hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://external.payex.com/PxOrder/PurchaseFinancing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PurchaseFinancing(long accountNumber, string orderRef, string accountId, string socialSecurityNumber, string countryCode, string contractType, string hash);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Initialize2", WrapperNamespace="http://external.payex.com/PxOrder/", IsWrapped=true)]
    internal partial class Initialize2 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=0)]
        public long accountNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=1)]
        public string orderType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=2)]
        public string purchaseOperation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=3)]
        public int autoRenew;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=4)]
        public string view;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=5)]
        public int period;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=6)]
        public string orderID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=7)]
        public string productNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=8)]
        public string subscriptionNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=9)]
        public int price;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=10)]
        public string priceArgList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=11)]
        public int vat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=12)]
        public string description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=13)]
        public string returnURL;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=14)]
        public int checkPeriod;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=15)]
        public string externalID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=16)]
        public int initialDiscount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=17)]
        public string expireDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=18)]
        public int expireDateType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=19)]
        public string hash;
        
        public Initialize2() {
        }
        
        public Initialize2(
                    long accountNumber, 
                    string orderType, 
                    string purchaseOperation, 
                    int autoRenew, 
                    string view, 
                    int period, 
                    string orderID, 
                    string productNumber, 
                    string subscriptionNumber, 
                    int price, 
                    string priceArgList, 
                    int vat, 
                    string description, 
                    string returnURL, 
                    int checkPeriod, 
                    string externalID, 
                    int initialDiscount, 
                    string expireDate, 
                    int expireDateType, 
                    string hash) {
            this.accountNumber = accountNumber;
            this.orderType = orderType;
            this.purchaseOperation = purchaseOperation;
            this.autoRenew = autoRenew;
            this.view = view;
            this.period = period;
            this.orderID = orderID;
            this.productNumber = productNumber;
            this.subscriptionNumber = subscriptionNumber;
            this.price = price;
            this.priceArgList = priceArgList;
            this.vat = vat;
            this.description = description;
            this.returnURL = returnURL;
            this.checkPeriod = checkPeriod;
            this.externalID = externalID;
            this.initialDiscount = initialDiscount;
            this.expireDate = expireDate;
            this.expireDateType = expireDateType;
            this.hash = hash;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Initialize2Response", WrapperNamespace="http://external.payex.com/PxOrder/", IsWrapped=true)]
    internal partial class Initialize21 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=0)]
        public string Initialize2Result;
        
        public Initialize21() {
        }
        
        public Initialize21(string Initialize2Result) {
            this.Initialize2Result = Initialize2Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Initialize", WrapperNamespace="http://external.payex.com/PxOrder/", IsWrapped=true)]
    internal partial class InitializeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=0)]
        public long accountNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=1)]
        public string orderType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=2)]
        public string purchaseOperation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=3)]
        public int autoRenew;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=4)]
        public string view;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=5)]
        public int period;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=6)]
        public string orderID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=7)]
        public string productNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=8)]
        public string subscriptionNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=9)]
        public int price;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=10)]
        public string priceArgList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=11)]
        public int vat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=12)]
        public string description;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=13)]
        public string returnURL;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=14)]
        public int checkPeriod;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=15)]
        public string externalID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=16)]
        public string hash;
        
        public InitializeRequest() {
        }
        
        public InitializeRequest(
                    long accountNumber, 
                    string orderType, 
                    string purchaseOperation, 
                    int autoRenew, 
                    string view, 
                    int period, 
                    string orderID, 
                    string productNumber, 
                    string subscriptionNumber, 
                    int price, 
                    string priceArgList, 
                    int vat, 
                    string description, 
                    string returnURL, 
                    int checkPeriod, 
                    string externalID, 
                    string hash) {
            this.accountNumber = accountNumber;
            this.orderType = orderType;
            this.purchaseOperation = purchaseOperation;
            this.autoRenew = autoRenew;
            this.view = view;
            this.period = period;
            this.orderID = orderID;
            this.productNumber = productNumber;
            this.subscriptionNumber = subscriptionNumber;
            this.price = price;
            this.priceArgList = priceArgList;
            this.vat = vat;
            this.description = description;
            this.returnURL = returnURL;
            this.checkPeriod = checkPeriod;
            this.externalID = externalID;
            this.hash = hash;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InitializeResponse", WrapperNamespace="http://external.payex.com/PxOrder/", IsWrapped=true)]
    internal partial class InitializeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=0)]
        public string InitializeResult;
        
        public InitializeResponse() {
        }
        
        public InitializeResponse(string InitializeResult) {
            this.InitializeResult = InitializeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddMultipleOrderLines", WrapperNamespace="http://external.payex.com/PxOrder/", IsWrapped=true)]
    internal partial class AddMultipleOrderLinesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=0)]
        public long accountNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=1)]
        public string orderRef;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=2)]
        public int numberOfItems;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] orderDetails;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=4)]
        public string hash;
        
        public AddMultipleOrderLinesRequest() {
        }
        
        public AddMultipleOrderLinesRequest(long accountNumber, string orderRef, int numberOfItems, string[][] orderDetails, string hash) {
            this.accountNumber = accountNumber;
            this.orderRef = orderRef;
            this.numberOfItems = numberOfItems;
            this.orderDetails = orderDetails;
            this.hash = hash;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddMultipleOrderLinesResponse", WrapperNamespace="http://external.payex.com/PxOrder/", IsWrapped=true)]
    internal partial class AddMultipleOrderLinesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://external.payex.com/PxOrder/", Order=0)]
        public string AddMultipleOrderLinesResult;
        
        public AddMultipleOrderLinesResponse() {
        }
        
        public AddMultipleOrderLinesResponse(string AddMultipleOrderLinesResult) {
            this.AddMultipleOrderLinesResult = AddMultipleOrderLinesResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface PxOrderSoapChannel : SD.Payex2.Services.PxOrder.PxOrderSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class PxOrderSoapClient : System.ServiceModel.ClientBase<SD.Payex2.Services.PxOrder.PxOrderSoap>, SD.Payex2.Services.PxOrder.PxOrderSoap {
        
        public PxOrderSoapClient() {
        }
        
        public PxOrderSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PxOrderSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PxOrderSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PxOrderSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Initialize8(
                    long accountNumber, 
                    string purchaseOperation, 
                    long price, 
                    string priceArgList, 
                    string currency, 
                    int vat, 
                    string orderID, 
                    string productNumber, 
                    string description, 
                    string clientIPAddress, 
                    string clientIdentifier, 
                    string additionalValues, 
                    string externalID, 
                    string returnUrl, 
                    string view, 
                    string agreementRef, 
                    string cancelUrl, 
                    string clientLanguage, 
                    string hash) {
            return base.Channel.Initialize8(accountNumber, purchaseOperation, price, priceArgList, currency, vat, orderID, productNumber, description, clientIPAddress, clientIdentifier, additionalValues, externalID, returnUrl, view, agreementRef, cancelUrl, clientLanguage, hash);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SD.Payex2.Services.PxOrder.Initialize21 SD.Payex2.Services.PxOrder.PxOrderSoap.Initialize(SD.Payex2.Services.PxOrder.Initialize2 request) {
            return base.Channel.Initialize(request);
        }
        
        public string Initialize(
                    long accountNumber, 
                    string orderType, 
                    string purchaseOperation, 
                    int autoRenew, 
                    string view, 
                    int period, 
                    string orderID, 
                    string productNumber, 
                    string subscriptionNumber, 
                    int price, 
                    string priceArgList, 
                    int vat, 
                    string description, 
                    string returnURL, 
                    int checkPeriod, 
                    string externalID, 
                    int initialDiscount, 
                    string expireDate, 
                    int expireDateType, 
                    string hash) {
            SD.Payex2.Services.PxOrder.Initialize2 inValue = new SD.Payex2.Services.PxOrder.Initialize2();
            inValue.accountNumber = accountNumber;
            inValue.orderType = orderType;
            inValue.purchaseOperation = purchaseOperation;
            inValue.autoRenew = autoRenew;
            inValue.view = view;
            inValue.period = period;
            inValue.orderID = orderID;
            inValue.productNumber = productNumber;
            inValue.subscriptionNumber = subscriptionNumber;
            inValue.price = price;
            inValue.priceArgList = priceArgList;
            inValue.vat = vat;
            inValue.description = description;
            inValue.returnURL = returnURL;
            inValue.checkPeriod = checkPeriod;
            inValue.externalID = externalID;
            inValue.initialDiscount = initialDiscount;
            inValue.expireDate = expireDate;
            inValue.expireDateType = expireDateType;
            inValue.hash = hash;
            SD.Payex2.Services.PxOrder.Initialize21 retVal = ((SD.Payex2.Services.PxOrder.PxOrderSoap)(this)).Initialize(inValue);
            return retVal.Initialize2Result;
        }
        
        public string Initialize3(
                    long accountNumber, 
                    string purchaseOperation, 
                    string orderType, 
                    int period, 
                    int price, 
                    string priceArgList, 
                    int vat, 
                    string orderID, 
                    string productNumber, 
                    string description, 
                    string clientIPAddress, 
                    string externalID, 
                    string returnUrl, 
                    string view, 
                    int viewType, 
                    string hash) {
            return base.Channel.Initialize3(accountNumber, purchaseOperation, orderType, period, price, priceArgList, vat, orderID, productNumber, description, clientIPAddress, externalID, returnUrl, view, viewType, hash);
        }
        
        public string Initialize4(
                    long accountNumber, 
                    string purchaseOperation, 
                    int price, 
                    string priceArgList, 
                    string currency, 
                    int vat, 
                    string orderID, 
                    string productNumber, 
                    string description, 
                    string clientIPAddress, 
                    string externalID, 
                    string returnUrl, 
                    string view, 
                    int viewType, 
                    string agreementRef, 
                    string cancelUrl, 
                    string hash) {
            return base.Channel.Initialize4(accountNumber, purchaseOperation, price, priceArgList, currency, vat, orderID, productNumber, description, clientIPAddress, externalID, returnUrl, view, viewType, agreementRef, cancelUrl, hash);
        }
        
        public string Initialize5(
                    long accountNumber, 
                    string purchaseOperation, 
                    int price, 
                    string priceArgList, 
                    string currency, 
                    int vat, 
                    string orderID, 
                    string productNumber, 
                    string description, 
                    string clientIPAddress, 
                    string clientIdentifier, 
                    string externalID, 
                    string returnUrl, 
                    string view, 
                    int viewType, 
                    string agreementRef, 
                    string cancelUrl, 
                    string hash) {
            return base.Channel.Initialize5(accountNumber, purchaseOperation, price, priceArgList, currency, vat, orderID, productNumber, description, clientIPAddress, clientIdentifier, externalID, returnUrl, view, viewType, agreementRef, cancelUrl, hash);
        }
        
        public string Initialize6(
                    long accountNumber, 
                    string purchaseOperation, 
                    int price, 
                    string priceArgList, 
                    string currency, 
                    int vat, 
                    string orderID, 
                    string productNumber, 
                    string description, 
                    string clientIPAddress, 
                    string clientIdentifier, 
                    string externalID, 
                    string returnUrl, 
                    string view, 
                    int viewType, 
                    string agreementRef, 
                    string cancelUrl, 
                    string clientLanguage, 
                    string hash) {
            return base.Channel.Initialize6(accountNumber, purchaseOperation, price, priceArgList, currency, vat, orderID, productNumber, description, clientIPAddress, clientIdentifier, externalID, returnUrl, view, viewType, agreementRef, cancelUrl, clientLanguage, hash);
        }
        
        public string Initialize7(
                    long accountNumber, 
                    string purchaseOperation, 
                    int price, 
                    string priceArgList, 
                    string currency, 
                    int vat, 
                    string orderID, 
                    string productNumber, 
                    string description, 
                    string clientIPAddress, 
                    string clientIdentifier, 
                    string additionalValues, 
                    string externalID, 
                    string returnUrl, 
                    string view, 
                    string agreementRef, 
                    string cancelUrl, 
                    string clientLanguage, 
                    string hash) {
            return base.Channel.Initialize7(accountNumber, purchaseOperation, price, priceArgList, currency, vat, orderID, productNumber, description, clientIPAddress, clientIdentifier, additionalValues, externalID, returnUrl, view, agreementRef, cancelUrl, clientLanguage, hash);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SD.Payex2.Services.PxOrder.InitializeResponse SD.Payex2.Services.PxOrder.PxOrderSoap.Initialize1(SD.Payex2.Services.PxOrder.InitializeRequest request) {
            return base.Channel.Initialize1(request);
        }
        
        public string Initialize1(
                    long accountNumber, 
                    string orderType, 
                    string purchaseOperation, 
                    int autoRenew, 
                    string view, 
                    int period, 
                    string orderID, 
                    string productNumber, 
                    string subscriptionNumber, 
                    int price, 
                    string priceArgList, 
                    int vat, 
                    string description, 
                    string returnURL, 
                    int checkPeriod, 
                    string externalID, 
                    string hash) {
            SD.Payex2.Services.PxOrder.InitializeRequest inValue = new SD.Payex2.Services.PxOrder.InitializeRequest();
            inValue.accountNumber = accountNumber;
            inValue.orderType = orderType;
            inValue.purchaseOperation = purchaseOperation;
            inValue.autoRenew = autoRenew;
            inValue.view = view;
            inValue.period = period;
            inValue.orderID = orderID;
            inValue.productNumber = productNumber;
            inValue.subscriptionNumber = subscriptionNumber;
            inValue.price = price;
            inValue.priceArgList = priceArgList;
            inValue.vat = vat;
            inValue.description = description;
            inValue.returnURL = returnURL;
            inValue.checkPeriod = checkPeriod;
            inValue.externalID = externalID;
            inValue.hash = hash;
            SD.Payex2.Services.PxOrder.InitializeResponse retVal = ((SD.Payex2.Services.PxOrder.PxOrderSoap)(this)).Initialize1(inValue);
            return retVal.InitializeResult;
        }
        
        public string InitializeBasic(long accountNumber, string purchaseOperation, string orderID, string productNumber, string priceArgList, string description, string returnURL, string hash) {
            return base.Channel.InitializeBasic(accountNumber, purchaseOperation, orderID, productNumber, priceArgList, description, returnURL, hash);
        }
        
        public string Complete(long accountNumber, string orderRef, string hash) {
            return base.Channel.Complete(accountNumber, orderRef, hash);
        }
        
        public string Check2(long accountNumber, int transactionNumber, string hash) {
            return base.Channel.Check2(accountNumber, transactionNumber, hash);
        }
        
        public string Check(long accountNumber, string transactionRef, string hash) {
            return base.Channel.Check(accountNumber, transactionRef, hash);
        }
        
        public string SalePX(long accountNumber, string orderRef, int userType, string userRef, string password, string hash) {
            return base.Channel.SalePX(accountNumber, orderRef, userType, userRef, password, hash);
        }
        
        public string AuthorizePX(long accountNumber, string orderRef, int userType, string userRef, string password, string hash) {
            return base.Channel.AuthorizePX(accountNumber, orderRef, userType, userRef, password, hash);
        }
        
        public string PurchasePX(long accountNumber, string orderRef, int userType, string userRef, string password, string hash) {
            return base.Channel.PurchasePX(accountNumber, orderRef, userType, userRef, password, hash);
        }
        
        public string PurchaseActivate(long accountNumber, int transactionNumber, string hash) {
            return base.Channel.PurchaseActivate(accountNumber, transactionNumber, hash);
        }
        
        public string PurchaseOTT(long accountNumber, string orderRef, int identifierType, string identifierRef, string hash) {
            return base.Channel.PurchaseOTT(accountNumber, orderRef, identifierType, identifierRef, hash);
        }
        
        public string SaleCPA(long accountNumber, string orderRef, int userType, string userRef, string password, string hash) {
            return base.Channel.SaleCPA(accountNumber, orderRef, userType, userRef, password, hash);
        }
        
        public string ReserveIVR(long accountNumber, string orderRef, string hash) {
            return base.Channel.ReserveIVR(accountNumber, orderRef, hash);
        }
        
        public string SaleIVR(long accountNumber, string orderRef, int userType, string userRef, string ivrCode, string hash) {
            return base.Channel.SaleIVR(accountNumber, orderRef, userType, userRef, ivrCode, hash);
        }
        
        public string Cancel2(long accountNumber, int transactionNumber, string hash) {
            return base.Channel.Cancel2(accountNumber, transactionNumber, hash);
        }
        
        public string Cancel(long accountNumber, string transactionRef, string hash) {
            return base.Channel.Cancel(accountNumber, transactionRef, hash);
        }
        
        public string Credit2(long accountNumber, int transactionNumber, int amount, string hash) {
            return base.Channel.Credit2(accountNumber, transactionNumber, amount, hash);
        }
        
        public string Credit3(long accountNumber, int transactionNumber, int amount, string orderId, string hash) {
            return base.Channel.Credit3(accountNumber, transactionNumber, amount, orderId, hash);
        }
        
        public string Credit4(long accountNumber, int transactionNumber, int amount, string orderId, int vatAmount, string additionalValues, string hash) {
            return base.Channel.Credit4(accountNumber, transactionNumber, amount, orderId, vatAmount, additionalValues, hash);
        }
        
        public string Credit5(long accountNumber, int transactionNumber, long amount, string orderId, int vatAmount, string additionalValues, string hash) {
            return base.Channel.Credit5(accountNumber, transactionNumber, amount, orderId, vatAmount, additionalValues, hash);
        }
        
        public string Credit(long accountNumber, string transactionRef, int amount, string hash) {
            return base.Channel.Credit(accountNumber, transactionRef, amount, hash);
        }
        
        public string CreditOrderLine2(long accountNumber, int transactionNumber, string itemNumber, string hash) {
            return base.Channel.CreditOrderLine2(accountNumber, transactionNumber, itemNumber, hash);
        }
        
        public string CreditOrderLine3(long accountNumber, int transactionNumber, string itemNumber, string orderId, string hash) {
            return base.Channel.CreditOrderLine3(accountNumber, transactionNumber, itemNumber, orderId, hash);
        }
        
        public string CreditOrderLine(long accountNumber, string transactionRef, string itemNumber, string hash) {
            return base.Channel.CreditOrderLine(accountNumber, transactionRef, itemNumber, hash);
        }
        
        public string Capture(long accountNumber, string transactionRef, int amount, string hash) {
            return base.Channel.Capture(accountNumber, transactionRef, amount, hash);
        }
        
        public string Capture2(long accountNumber, int transactionNumber, int amount, string hash) {
            return base.Channel.Capture2(accountNumber, transactionNumber, amount, hash);
        }
        
        public string Capture3(long accountNumber, int transactionNumber, int amount, string orderId, string hash) {
            return base.Channel.Capture3(accountNumber, transactionNumber, amount, orderId, hash);
        }
        
        public string Capture4(long accountNumber, int transactionNumber, int amount, string orderId, int vatAmount, string additionalValues, string hash) {
            return base.Channel.Capture4(accountNumber, transactionNumber, amount, orderId, vatAmount, additionalValues, hash);
        }
        
        public string Capture5(long accountNumber, int transactionNumber, long amount, string orderId, int vatAmount, string additionalValues, string hash) {
            return base.Channel.Capture5(accountNumber, transactionNumber, amount, orderId, vatAmount, additionalValues, hash);
        }
        
        public string SaleEVC(long accountNumber, string orderRef, int userType, string userRef, string valueCode, string clientIPAddress, string hash) {
            return base.Channel.SaleEVC(accountNumber, orderRef, userType, userRef, valueCode, clientIPAddress, hash);
        }
        
        public string AuthorizeEVC(long accountNumber, string orderRef, int userType, string userRef, string valueCode, string clientIPAddress, string hash) {
            return base.Channel.AuthorizeEVC(accountNumber, orderRef, userType, userRef, valueCode, clientIPAddress, hash);
        }
        
        public string AddSingleOrderLine(long accountNumber, string orderRef, string itemNumber, string itemDescription1, string itemDescription2, string itemDescription3, string itemDescription4, string itemDescription5, int quantity, int amount, int vatPrice, int vatPercent, string hash) {
            return base.Channel.AddSingleOrderLine(accountNumber, orderRef, itemNumber, itemDescription1, itemDescription2, itemDescription3, itemDescription4, itemDescription5, quantity, amount, vatPrice, vatPercent, hash);
        }
        
        public string AddSingleOrderLine2(long accountNumber, string orderRef, string itemNumber, string itemDescription1, string itemDescription2, string itemDescription3, string itemDescription4, string itemDescription5, int quantity, long amount, int vatPrice, int vatPercent, string hash) {
            return base.Channel.AddSingleOrderLine2(accountNumber, orderRef, itemNumber, itemDescription1, itemDescription2, itemDescription3, itemDescription4, itemDescription5, quantity, amount, vatPrice, vatPercent, hash);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SD.Payex2.Services.PxOrder.AddMultipleOrderLinesResponse SD.Payex2.Services.PxOrder.PxOrderSoap.AddMultipleOrderLines(SD.Payex2.Services.PxOrder.AddMultipleOrderLinesRequest request) {
            return base.Channel.AddMultipleOrderLines(request);
        }
        
        public string AddMultipleOrderLines(long accountNumber, string orderRef, int numberOfItems, string[][] orderDetails, string hash) {
            SD.Payex2.Services.PxOrder.AddMultipleOrderLinesRequest inValue = new SD.Payex2.Services.PxOrder.AddMultipleOrderLinesRequest();
            inValue.accountNumber = accountNumber;
            inValue.orderRef = orderRef;
            inValue.numberOfItems = numberOfItems;
            inValue.orderDetails = orderDetails;
            inValue.hash = hash;
            SD.Payex2.Services.PxOrder.AddMultipleOrderLinesResponse retVal = ((SD.Payex2.Services.PxOrder.PxOrderSoap)(this)).AddMultipleOrderLines(inValue);
            return retVal.AddMultipleOrderLinesResult;
        }
        
        public string PrepareSaleDD(long accountNumber, string orderRef, int userType, string userRef, string bankName, string clientIPAddress, string clientIdentifier, string hash) {
            return base.Channel.PrepareSaleDD(accountNumber, orderRef, userType, userRef, bankName, clientIPAddress, clientIdentifier, hash);
        }
        
        public string PrepareSaleDD2(long accountNumber, string orderRef, int userType, string userRef, string bankName, string hash) {
            return base.Channel.PrepareSaleDD2(accountNumber, orderRef, userType, userRef, bankName, hash);
        }
        
        public string PrepareAuthorizeDD(long accountNumber, string orderRef, int userType, string userRef, string bankName, string hash) {
            return base.Channel.PrepareAuthorizeDD(accountNumber, orderRef, userType, userRef, bankName, hash);
        }
        
        public string SaleInvoice(
                    long accountNumber, 
                    string orderRef, 
                    int userType, 
                    string userRef, 
                    string invoiceText, 
                    int mediaDistribution, 
                    string customerId, 
                    string customerName, 
                    string customerPostNumber, 
                    string customerCity, 
                    string customerCountry, 
                    string customerSosialSecurityNumber, 
                    string customerPhoneNumber, 
                    string customerEmailAddress, 
                    string customerCOAddress, 
                    string customerStreetAddress, 
                    string productCode, 
                    string dueDateExceeded, 
                    string hash) {
            return base.Channel.SaleInvoice(accountNumber, orderRef, userType, userRef, invoiceText, mediaDistribution, customerId, customerName, customerPostNumber, customerCity, customerCountry, customerSosialSecurityNumber, customerPhoneNumber, customerEmailAddress, customerCOAddress, customerStreetAddress, productCode, dueDateExceeded, hash);
        }
        
        public string SaleInvoice2(
                    long accountNumber, 
                    string orderRef, 
                    int userType, 
                    string userRef, 
                    string invoiceText, 
                    int mediaDistribution, 
                    string customerId, 
                    string customerName, 
                    string customerPostNumber, 
                    string customerCity, 
                    string customerCountry, 
                    string customerSosialSecurityNumber, 
                    string customerPhoneNumber, 
                    string customerEmailAddress, 
                    string customerCOAddress, 
                    string customerStreetAddress, 
                    string productCode, 
                    string dueDateExceeded, 
                    string creditcheckRef, 
                    string invoiceLayout, 
                    string hash) {
            return base.Channel.SaleInvoice2(accountNumber, orderRef, userType, userRef, invoiceText, mediaDistribution, customerId, customerName, customerPostNumber, customerCity, customerCountry, customerSosialSecurityNumber, customerPhoneNumber, customerEmailAddress, customerCOAddress, customerStreetAddress, productCode, dueDateExceeded, creditcheckRef, invoiceLayout, hash);
        }
        
        public string SaleInvoiceLedger(
                    long accountNumber, 
                    string orderRef, 
                    int userType, 
                    string userRef, 
                    string invoiceText, 
                    int mediaDistribution, 
                    string customerId, 
                    string customerName, 
                    string customerPostNumber, 
                    string customerCity, 
                    string customerCountry, 
                    string customerSosialSecurityNumber, 
                    string customerPhoneNumber, 
                    string customerEmailAddress, 
                    string customerCOAddress, 
                    string customerStreetAddress, 
                    string productCode, 
                    string dueDate, 
                    string creditcheckRef, 
                    int invoiceNumber, 
                    string invoiceDate, 
                    string hash) {
            return base.Channel.SaleInvoiceLedger(accountNumber, orderRef, userType, userRef, invoiceText, mediaDistribution, customerId, customerName, customerPostNumber, customerCity, customerCountry, customerSosialSecurityNumber, customerPhoneNumber, customerEmailAddress, customerCOAddress, customerStreetAddress, productCode, dueDate, creditcheckRef, invoiceNumber, invoiceDate, hash);
        }
        
        public string AddLoan(
                    long accountNumber, 
                    string orderRef, 
                    string socialSecurityNumber, 
                    string email, 
                    string firstName, 
                    string lastName, 
                    string address, 
                    string postalCode, 
                    string city, 
                    string country, 
                    string phone1, 
                    string phone2, 
                    string gsm, 
                    string additionalProducs, 
                    string shippingDescription, 
                    string additionalInfo, 
                    int calculateType, 
                    string calculateRef, 
                    int nominalInterest, 
                    int pkiMethod, 
                    int model, 
                    string hash) {
            return base.Channel.AddLoan(accountNumber, orderRef, socialSecurityNumber, email, firstName, lastName, address, postalCode, city, country, phone1, phone2, gsm, additionalProducs, shippingDescription, additionalInfo, calculateType, calculateRef, nominalInterest, pkiMethod, model, hash);
        }
        
        public string CalculateLoan(long accountNumber, int numberOfMonths, int monthlyPayment, long amount, int loanType, string hash) {
            return base.Channel.CalculateLoan(accountNumber, numberOfMonths, monthlyPayment, amount, loanType, hash);
        }
        
        public string SaleLoan(long accountNumber, string orderRef, int userType, string userRef, string hash) {
            return base.Channel.SaleLoan(accountNumber, orderRef, userType, userRef, hash);
        }
        
        public string AuthorizeLoan(long accountNumber, string orderRef, int userType, string userRef, string hash) {
            return base.Channel.AuthorizeLoan(accountNumber, orderRef, userType, userRef, hash);
        }
        
        public string AddOrderAddress(
                    long accountNumber, 
                    string orderRef, 
                    string billingFirstName, 
                    string billingLastName, 
                    string billingAddress1, 
                    string billingAddress2, 
                    string billingAddress3, 
                    string billingPostNumber, 
                    string billingCity, 
                    string billingState, 
                    string billingCountry, 
                    string billingEmail, 
                    string billingPhone, 
                    string billingGsm, 
                    string deliveryFirstName, 
                    string deliveryLastName, 
                    string deliveryAddress1, 
                    string deliveryAddress2, 
                    string deliveryAddress3, 
                    string deliveryPostNumber, 
                    string deliveryCity, 
                    string deliveryState, 
                    string deliveryCountry, 
                    string deliveryEmail, 
                    string deliveryPhone, 
                    string deliveryGsm, 
                    string hash) {
            return base.Channel.AddOrderAddress(accountNumber, orderRef, billingFirstName, billingLastName, billingAddress1, billingAddress2, billingAddress3, billingPostNumber, billingCity, billingState, billingCountry, billingEmail, billingPhone, billingGsm, deliveryFirstName, deliveryLastName, deliveryAddress1, deliveryAddress2, deliveryAddress3, deliveryPostNumber, deliveryCity, deliveryState, deliveryCountry, deliveryEmail, deliveryPhone, deliveryGsm, hash);
        }
        
        public string AddOrderAddress2(
                    long accountNumber, 
                    string orderRef, 
                    string billingFirstName, 
                    string billingLastName, 
                    string billingAddress1, 
                    string billingAddress2, 
                    string billingAddress3, 
                    string billingPostNumber, 
                    string billingCity, 
                    string billingState, 
                    string billingCountry, 
                    string billingCountryCode, 
                    string billingEmail, 
                    string billingPhone, 
                    string billingGsm, 
                    string deliveryFirstName, 
                    string deliveryLastName, 
                    string deliveryAddress1, 
                    string deliveryAddress2, 
                    string deliveryAddress3, 
                    string deliveryPostNumber, 
                    string deliveryCity, 
                    string deliveryState, 
                    string deliveryCountry, 
                    string deliveryCountryCode, 
                    string deliveryEmail, 
                    string deliveryPhone, 
                    string deliveryGsm, 
                    string hash) {
            return base.Channel.AddOrderAddress2(accountNumber, orderRef, billingFirstName, billingLastName, billingAddress1, billingAddress2, billingAddress3, billingPostNumber, billingCity, billingState, billingCountry, billingCountryCode, billingEmail, billingPhone, billingGsm, deliveryFirstName, deliveryLastName, deliveryAddress1, deliveryAddress2, deliveryAddress3, deliveryPostNumber, deliveryCity, deliveryState, deliveryCountry, deliveryCountryCode, deliveryEmail, deliveryPhone, deliveryGsm, hash);
        }
        
        public string AuthorizeGC(long accountNumber, string orderRef, int userType, string userRef, string pan, string expireMonth, string expireYear, string cvc, string hash) {
            return base.Channel.AuthorizeGC(accountNumber, orderRef, userType, userRef, pan, expireMonth, expireYear, cvc, hash);
        }
        
        public string SaleGC(long accountNumber, string orderRef, int userType, string userRef, string pan, string expireMonth, string expireYear, string cvc, string hash) {
            return base.Channel.SaleGC(accountNumber, orderRef, userType, userRef, pan, expireMonth, expireYear, cvc, hash);
        }
        
        public string GetTransactionDetails2(long accountNumber, int transactionNumber, string hash) {
            return base.Channel.GetTransactionDetails2(accountNumber, transactionNumber, hash);
        }
        
        public string GetTransactionDetails(long accountNumber, string transactionRef, string hash) {
            return base.Channel.GetTransactionDetails(accountNumber, transactionRef, hash);
        }
        
        public string TransactionCheck2(long accountNumber, int transactionNumber, string hash) {
            return base.Channel.TransactionCheck2(accountNumber, transactionNumber, hash);
        }
        
        public string AuthorizeInvoice(
                    long accountNumber, 
                    string orderRef, 
                    int userType, 
                    string userRef, 
                    string invoiceText, 
                    int mediaDistribution, 
                    string customerId, 
                    string customerName, 
                    string customerPostNumber, 
                    string customerCity, 
                    string customerCountry, 
                    string customerSosialSecurityNumber, 
                    string customerPhoneNumber, 
                    string customerEmailAddress, 
                    string customerCOAddress, 
                    string customerStreetAddress, 
                    string productCode, 
                    string dueDateExceeded, 
                    string creditcheckRef, 
                    string invoiceLayout, 
                    string hash) {
            return base.Channel.AuthorizeInvoice(accountNumber, orderRef, userType, userRef, invoiceText, mediaDistribution, customerId, customerName, customerPostNumber, customerCity, customerCountry, customerSosialSecurityNumber, customerPhoneNumber, customerEmailAddress, customerCOAddress, customerStreetAddress, productCode, dueDateExceeded, creditcheckRef, invoiceLayout, hash);
        }
        
        public string AuthorizeInvoiceLedger(
                    long accountNumber, 
                    string orderRef, 
                    int userType, 
                    string userRef, 
                    string invoiceText, 
                    int mediaDistribution, 
                    string customerId, 
                    string customerName, 
                    string customerPostNumber, 
                    string customerCity, 
                    string customerCountry, 
                    string customerSosialSecurityNumber, 
                    string customerPhoneNumber, 
                    string customerEmailAddress, 
                    string customerCOAddress, 
                    string customerStreetAddress, 
                    string productCode, 
                    string dueDate, 
                    string creditcheckRef, 
                    int invoiceNumber, 
                    string invoiceDate, 
                    string hash) {
            return base.Channel.AuthorizeInvoiceLedger(accountNumber, orderRef, userType, userRef, invoiceText, mediaDistribution, customerId, customerName, customerPostNumber, customerCity, customerCountry, customerSosialSecurityNumber, customerPhoneNumber, customerEmailAddress, customerCOAddress, customerStreetAddress, productCode, dueDate, creditcheckRef, invoiceNumber, invoiceDate, hash);
        }
        
        public string PurchaseInvoicePrivate(
                    long accountNumber, 
                    string orderRef, 
                    string customerRef, 
                    string customerName, 
                    string streetAddress, 
                    string coAddress, 
                    string postalCode, 
                    string city, 
                    string country, 
                    string socialSecurityNumber, 
                    string phoneNumber, 
                    string email, 
                    string productCode, 
                    string creditcheckRef, 
                    int mediaDistribution, 
                    string invoiceText, 
                    string invoiceDate, 
                    short invoiceDueDays, 
                    int invoiceNumber, 
                    string invoiceLayout, 
                    string hash) {
            return base.Channel.PurchaseInvoicePrivate(accountNumber, orderRef, customerRef, customerName, streetAddress, coAddress, postalCode, city, country, socialSecurityNumber, phoneNumber, email, productCode, creditcheckRef, mediaDistribution, invoiceText, invoiceDate, invoiceDueDays, invoiceNumber, invoiceLayout, hash);
        }
        
        public string PurchaseInvoiceCorporate(
                    long accountNumber, 
                    string orderRef, 
                    string companyRef, 
                    string companyName, 
                    string streetAddress, 
                    string coAddress, 
                    string postalCode, 
                    string city, 
                    string country, 
                    string organizationNumber, 
                    string phoneNumber, 
                    string email, 
                    string productCode, 
                    string creditcheckRef, 
                    int mediaDistribution, 
                    string invoiceText, 
                    string invoiceDate, 
                    short invoiceDueDays, 
                    int invoiceNumber, 
                    string invoiceLayout, 
                    string hash) {
            return base.Channel.PurchaseInvoiceCorporate(accountNumber, orderRef, companyRef, companyName, streetAddress, coAddress, postalCode, city, country, organizationNumber, phoneNumber, email, productCode, creditcheckRef, mediaDistribution, invoiceText, invoiceDate, invoiceDueDays, invoiceNumber, invoiceLayout, hash);
        }
        
        public string PurchaseFinancing(long accountNumber, string orderRef, string accountId, string socialSecurityNumber, string countryCode, string contractType, string hash) {
            return base.Channel.PurchaseFinancing(accountNumber, orderRef, accountId, socialSecurityNumber, countryCode, contractType, hash);
        }
    }
}
